# This file is shared by all ib_credits simulations.
# Lines beginning with `#' are comments

[General]

**.result-recording-modes = default
**.scalar-recording = true

network = {{ name }}

# this line is for Cmdenv
print-undisposed = false
debug-on-errors = true

include /home/pmacarth/src/omnetpp-workspace/ib_model/networks/pcie_8x_g3.ini

**.socketListenHost = "127.0.0.1"
**.startStatCol = 0us
**.dimemasTimescale = 1ns

**.appCount = 1

**.flitSize = 64B
**.width = 4
**.speed = 14Gbps
**.maxVL = 0 # note that maxvl is the max value of the VL not num

##################################################################
# SINK
##################################################################
# Sink
**.sink.hiccupDuration = 0.001us
# If we do not want the sink to create hiccups, configure a large value
**.sink.hiccupDelay = 10000us
# no tracking of first n packets
**.sink.repFirstPackets = 0

##################################################################
# OBUF
##################################################################
**SW**.obuf.size = 78       # in flits
**H_**.obuf.size = 72       # in flits
**.obuf.width = 4

##################################################################
# IBUF
##################################################################
# IN Is4 Total of flits in IBUF = 1000
**.ibuf.maxStatic* = 512  # in flits
**.ibuf.lossyMode = false # true makes the port lossy
# speedup
**ibuf.maxBeingSent = 3
**ibuf.totalBufferSize = 2048 # in credits

##################################################################
# VLA
##################################################################
**.vlarb.width = 4          # 4x interface
**SW**.vlarb.coreFreq = 1000MHz
**H_**.vlarb.coreFreq = 1000MHz
**SW**.vlarb.busWidth = 24B  # Baz can push 72 bytes out of ibuf into 3 obufs
**H_**.vlarb.busWidth = 16B  # assume an HCA is supporting QDR with 250MHz
**.vlarb.vlHighLimit = 16
**.vlarb.highVLArbEntries = "0:1 1:20 2:40 3:80"
**.vlarb.lowVLArbEntries = "0:1 1:20 2:40 3:80"
**.vlarb.useFCFSRQArb = false

##################################################################
# PKTFWD
##################################################################

**.pktfwd.AdaptMode = "none"    # none|free|bounded
**.pktfwd.LIDBindTime = 2us     # Time each LID is bounded to outport
**.pktfwd.TQBusy1Thd = 20       # Num Flits Queud to qualify as lvl 1 busyness
**.pktfwd.TQBusy2Thd = 40       # Num Flits Queud to qualify as lvl 2 busyness
**.pktfwd.TQBusy3Thd = 80       # Num Flits Queud to qualify as lvl 3 busyness
**.pktfwd.ARAdaptThd = 4        # Businnes level causing AR ( > Thd3)
**.pktfwd.OPSelAlgo = "greedy" # OutPort selection algorithm: random|greedy|greedyRandom
**.pktfwd.GreedyRandSize = 3    # number of ports to select from the best port
**.pktfwd.statRepTime = 10us    # time between statistics report
**.pktfwd.OPSelOffsetByDLID = 0 # if 1 will start selection from DLID offset

##################################################################
# APP
##################################################################

# DESTINATION

# possible values are: queue | param | seq_loop | seq_once seq_rand
**.dstMode = "queue" # send by the given dstLid parameter
**.dstLid = 255
# Not relevant for dstLid mode but still required
**.app[*].dstSeqVecFile = ""
**.app[*].dstSeqVecIdx = 0

# Msg Length
**.msgLenMode = "param"
**.msgMtuLen = 2048B
**.msgLength = 32768B # 32K messages
# not relevant for param mode but still required
**.msgLenSet = "1152 2048 4096"
**.msgLenProb = "1 1 1 1"
**.msg2msgGap = 400ns
**.initialDelay = 0ns

# Others:
**.msgSQ = 0

##################################################################
# GENERATOR
##################################################################
**.maxContPkts = 10
**.popDlyPerByte = 0ns
**.maxQueuedPerVL = 4
**.flit2FlitGap = 50ns
**.pkt2PktGap = 50ns

##################################################################
# SWITCH
##################################################################
#Switch
**.ISWDelay = 50ns     # in ns
**.VSWDelay = 50ns     # in ns
# generated file holding port groups and FDBs vector indexes
**.SW**.fdbsVecFile = "{{ name }}.fdbs"
{% for switch in switches %}
**.{{ switch.name }}**.fdbIndex = {{ loop.index - 1 }}
{% endfor %}

**.pktFwdType = "Pktfwd"

#####################################
# RUNS
#####################################
[Config One]
description = "Simple Run"
repeat = 1
